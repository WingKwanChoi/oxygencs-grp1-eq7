name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - akram/container-oxygencs

jobs:
  test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Integration Tests
        run: |
          python test/test_integration.py
        continue-on-error: false  # Stop the build if tests fail

  lint_format:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black
      
      - name: Lint with Pylint
        run: |
          pylint src
        continue-on-error: true  # Continue even if linting issues are found
      
      - name: Format with Black
        run: |
          black --check src
        continue-on-error: true  # Continue even if formatting issues are found

  build_and_deploy:
    name: Build and Deploy Docker Image
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test, lint_format]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build Docker Image
        run: |
          docker build -t tktbruv/oxygencs:latest -t tktbruv/oxygencs:$(git rev-parse --short HEAD) .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/oxygencs:latest ${{ secrets.DOCKERHUB_USERNAME }}/oxygencs:${{ github.run_number }}
      
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      
      - name: Push Docker Image
        run: |
          docker push tktbruv/oxygencs:latest
          docker push tktbruv/oxygencs:$(git rev-parse --short HEAD)

      - name: Set up Kubernetes
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/oxygencs-deploy metrics=tktbruv/oxygencs:$(git rev-parse --short HEAD) -n grp01eq7-namespace
          kubectl rollout status deployment/oxygencs-deploy -n grp01eq7-namespace